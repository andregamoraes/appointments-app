services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build: ./backend
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py seed_demo &&
             python manage.py runserver 0.0.0.0:4000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    ports: ["4000:4000"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_BASE_URL: http://localhost:4000
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend

volumes:
  pgdata:
